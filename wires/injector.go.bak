package wires

import (
	"com.github.gin-common/app/service"
	"com.github.gin-common/app/service/impl"
	"com.github.gin-common/common/controllers"
	"github.com/google/wire"
)

var sessionInjectSet = wire.NewSet(provideGormSessionTimeout, provideTimeoutGormContext, provideTimeoutGormSession)
var redisInjectSet = wire.NewSet(provideRedisRdb, provideRedisContext)

var userServiceInjectSet = wire.NewSet(sessionInjectSet, provideUserService, wire.Bind(new(service.UserService), new(*impl.UserServiceImpl)))
var createUserControllerInjectSet = wire.NewSet(provideCreateUserForm, userServiceInjectSet, provideCreateUserController)

func CreateUserController() controllers.Controller {
	wire.Build(createUserControllerInjectSet)
	return nil
}

var editUserControllerInjectSet = wire.NewSet(provideUpdateUserForm, provideEditUserController, userServiceInjectSet)

func UpdateUserController() controllers.Controller {
	wire.Build(editUserControllerInjectSet)
	return nil
}

var deleteUserControllerInjectSet = wire.NewSet(provideDeleteUserController, userServiceInjectSet)

func DeleteUserController() controllers.Controller {
	wire.Build(deleteUserControllerInjectSet)
	return nil
}

var activateUserControllerInjectSet = wire.NewSet(provideActivateUserController, userServiceInjectSet)

func ActivateUserController() controllers.Controller {
	wire.Build(activateUserControllerInjectSet)
	return nil
}

var deActivateUserControllerInjectSet = wire.NewSet(provideDeActivateUserController, userServiceInjectSet)

func DeActivateUserController() controllers.Controller {
	wire.Build(deActivateUserControllerInjectSet)
	return nil
}

var getUserInfoControllerInjectSet = wire.NewSet(provideGetUserInfoController, userServiceInjectSet)

func GetUserInfoController() controllers.Controller {
	wire.Build(getUserInfoControllerInjectSet)
	return nil
}

var changePasswordControllerInjectSet = wire.NewSet(provideChangePasswordController, provideChangePassForm, userServiceInjectSet)

func ChangePasswordController() controllers.Controller {
	wire.Build(changePasswordControllerInjectSet)
	return nil
}

var authMiddlewareInjectSet = wire.NewSet(provideAuthMiddleware, redisInjectSet, userServiceInjectSet)

func AuthMiddleware() controllers.MiddleWare {
	wire.Build(authMiddlewareInjectSet)
	return nil
}

func DeactivatedAbortMiddleware() controllers.MiddleWare {
	wire.Build(provideDeactivatedAbortMiddleware)
	return nil
}

var authServiceInjectSet = wire.NewSet(provideAuthService, redisInjectSet, userServiceInjectSet, wire.Bind(new(service.AuthService), new(*impl.AuthServiceImpl)))

var loginControllerInjectSet = wire.NewSet(provideLoginController, provideLoginForm, authServiceInjectSet)

func LoginController() controllers.Controller {
	wire.Build(loginControllerInjectSet)
	return nil
}

var logoutControllerInjectSet = wire.NewSet(provideLogoutController, authServiceInjectSet)

func LogoutController() controllers.Controller {
	wire.Build(logoutControllerInjectSet)
	return nil
}

func CurrentUserController() controllers.Controller {
	wire.Build(provideCurrentUserController)
	return nil
}
